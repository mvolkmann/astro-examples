---
import Layout from '../layouts/Layout.astro';
import RenderDog from '../components/RenderDog.astro';
import Counter1 from '../components/Counter.tsx';
import Counter2 from '../components/Counter.svelte';
import Counter3 from '../components/Counter.astro';
import Demo from '../components/Demo.astro';
import RenderScore from '../components/RenderScore.astro';
import SelectScore from '../components/SelectScore.astro';
---

<Layout>
  <h1>nanostores Demo</h1>

  <main x-data x-init="topSetup($data)">
    <Counter1 label="React" client:only="react" />
    <Counter2 label="Svelte" client:only="svelte" />
    <!-- client:* directives cannot be applied to Astro components. -->
    <Counter3 label="Astro" />

    <RenderDog />
    <button @click="toggleDog">Toggle Dog</button>

    <SelectScore />
    <RenderScore />

    <Demo />
    <Demo />
  </main>
</Layout>

<script src="/src/stores.js"></script>

<script defer>
  function sync(store, data, property) {
    store.subscribe(value => data[property] = value);
  }

  function topSetup(data) {
    const {dog, score, status} = stores;

    sync(dog, data, 'dog');
    sync(score, data, 'score');
    sync(status, data, 'status');

    data.toggleDog = () => {
      // The get method retrieves the entire object.
      // There is no getKey method.
      const {name} = dog.get();

      // The set method changes the entire object.
      // The setKey method changes a single property.
      dog.setKey('name', name === 'Comet' ? 'Oscar' : 'Comet');
      dog.setKey('breed', name === 'Comet' ? 'GSP' : 'Whippet');
    };

    data.setScore = score.set;
  }
</script>