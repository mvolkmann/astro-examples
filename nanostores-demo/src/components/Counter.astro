---
interface Props {
  label?: string;
}

const {label = ''} = Astro.props;
---

<div
  class="row"
  x-data
  x-init="counterSetup($data)"
  x-effect="setCount(Number(count))"
>
  {label && <div>{label}</div>}
  <button :disabled="count <= 0" @click="count--">-</button>
  <div x-text="count"></div>
  <button @click="count++">+</button>
</div>

<script is:inline>
  // This updates an Alpine x-data property
  // every time a related store value changes.
  function sync(store, data, property) {
    store.subscribe(value => data[property] = value);
  }

  function counterSetup(data) {
    const {count} = stores;
    sync(count, data, 'count');
    data.setCount = count.set;
  }
</script>

<style>
  .row {
    display: flex;
    align-items: center;
    gap: 1rem;
  }
</style>
