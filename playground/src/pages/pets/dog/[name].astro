---
import { Image } from "astro:assets";
import {getCollection, getEntry, type CollectionEntry} from 'astro:content';
import {slide} from 'astro:transitions';
// import Layout from "../../../layouts/Layout.astro";
import Layout from '@layouts/Layout.astro';

const {name} = Astro.params;
if (!name) throw new Error('Missing name parameter');

// The second argument of getEntry must be lowercase
// even if the Markdown filename uses uppercase.
const entry = await getEntry('dogs', name.toLowerCase());
let Content;
let breed = '';
let photo;
if (entry) {
  ({breed, photo} = entry.data);
  ({Content} = await entry?.render());
}

export async function getStaticPaths() {
  const dogs: CollectionEntry<'dogs'>[] = await getCollection('dogs');
  return dogs.map(dog => ({params: {name: dog.data.name}}));
}

export const prerender = true;
---

<Layout title={name} transition:animate={slide({duration: '2s'})}>
  <main class="dog my-4">
    <p class="font-bold mb-4">{name} is a {breed}.</p>
    <div class="img-container">
      {photo && (
        <Image
          alt="breed photo"
          src={photo}
          transition:name={name + '-img'}
          width={600}
        />
      )}
    </div>
    {Content && <Content />}
  </main>
</Layout>

<style is:global>
  .dog li {
    list-style-type: disc;
    margin-left: 1.2rem;
  }
</style>

<style>
  img {
    height: auto;
    width: 40rem;
  }
</style>
